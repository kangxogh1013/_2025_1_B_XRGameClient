using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[CreateAssetMenu(fileName = "ItemDatabase", menuName = "Inventory/Database")]

public class ItemDatabaseSO : ScriptableObject
{
    public List<ItemSO> items = new List<ItemSO>();         //item 리스트에 선언 되어 있는 것을 가지고  Dictionary에 입력한다

    //캐싱을 위한 사전
    private Dictionary<int, ItemSO> itemsByld;              //ID로 아이템 찾기 위한 캐싱
    private Dictionary<string, ItemSO> itemsByName;         //이름으로 아이템 찾기

    public void Initalize()                                 //초기설정 함수
    {
        itemsByld = new Dictionary<int, ItemSO>();          //위에 선언만 했기 떄문에 Dictionary 할당
        itemsByName = new Dictionary<string, ItemSO>(); 

        foreach (var item in items)                         //item 리스트에 선언 되어 있는 것을 가지고  Dictionary에 입력한다.
        {
            itemsByld[item.id] = item;
            itemsByName[item.itemName] = item;
        }
    }

    //ID로 아이템 찾기
    public ItemSO GetItemByld(int id)                       //itemsByld가 캐싱이 되어 있지 않다면 초기화 한다
    {
        if(itemsByld == null)
        {
            Initalize();
        }

        if (itemsByld.TryGetValue(id, out ItemSO item))     //ID 값을 찾아서 ItemSO를 리턴 한다
            return item;

        return null;                                        //없을 경우 NULL
    }

    //이름으로 아이템 찾기
    public ItemSO GetItemByName(string name)
    {
        if(itemsByName == null)                             //itemsByName 가 캐싱이 되어있지 않다면 초기화 한다.
        {
            Initalize();
        }
        if (itemsByName.TryGetValue(name, out ItemSO item)) //name 값을 찾아서 ItemSO를 리턴 한다.
            return item;

        return null;
    }

    //타입으로 아이템 필터링
    public List<ItemSO> GetItemByTape(ItemTypes types)
    {
        return items.FindAll(item => item.itemTypes == types);
    }
}
